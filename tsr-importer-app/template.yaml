AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tsr-importer-app

  Imports data from the TSR S3 bucket into our database, and generates demographic summary data

Globals:
  Function:
    Timeout: 300
  Api:
    Cors:
      AllowMethods: "'OPTIONS,GET'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"

# Parameters:
  # SessionTableName:
  #   Type: String
  #   Description: The name of the DynamoDB table that holds all session data
  #   Default: tsr-importer-app-SessionTable-O89MWVA1W5BQ
  # SummaryTableName:
  #   Type: String
  #   Description: The name of the DynamoDB table that holds all question summary data (totals, broken down by demographic)
  #   Default: tsr-importer-app-SummaryTable-6TXVBV7ENKKK
  # IndividualWorkshopSummaryTableName:
  #   Type: String
  #   Description: The name of the DynamoDB table that holds all question summary data (totals, per session)
  #   Default: tsr-individual-session-summary

Resources:
  SummariserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tsr-summariser/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      MemorySize: 1024
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SummaryTable
        - DynamoDBCrudPolicy:
            TableName: !Ref IndividualWorkshopSummaryTable
      Environment:
        Variables:
          TSR_SESSION_TABLE_NAME: !Ref SessionTable
          TSR_SUMMARY_TABLE_NAME: !Ref SummaryTable
          TSR_INDIVIDUAL_WORKSHOP_SUMMARY_TABLE_NAME: !Ref IndividualWorkshopSummaryTable
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt SessionTable.StreamArn
            BatchSize: 100
            StartingPosition: TRIM_HORIZON
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  SummaryEndpointFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tsr-summary-endpoint/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      # AutoPublishAlias: Live
      # DeploymentPreference:
      #   Type: AllAtOnce
      # ProvisionedConcurrencyConfig:
      #   ProvisionedConcurrentExecutions: 1
      Events:
        SummaryRequest:
          Type: Api
          Properties:
            Path: /summary
            Method: get
      Environment:
        Variables:
          TSR_SUMMARY_TABLE_NAME: !Ref SummaryTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SummaryTable

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  ImporterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tsr-importer/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  SessionTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      # Implicit table name
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - KeyType: HASH
          AttributeName: id

  SummaryTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      # Implicit table name
      PrimaryKey:
        Name: id # same as demographic
        Type: String

  IndividualWorkshopSummaryTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      # Implicit table name
      PrimaryKey:
        Name: id # `${sessionId}/${demographic}`
        Type: String

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub "ApplicationInsights-SAM-${AWS::StackName}"
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  SummariserFunctionARN:
    Description: Summariser function ARN
    Value: !GetAtt SummariserFunction.Arn

  SummariserFunctionIamRole:
    Description: Implicit IAM Role created for summariser function
    Value: !GetAtt SummariserFunctionRole.Arn

  ImporterFunctionARN:
    Description: Importer function ARN
    Value: !GetAtt ImporterFunction.Arn

  ImporterFunctionIamRole:
    Description: Implicit IAM Role created for importer function
    Value: !GetAtt ImporterFunctionRole.Arn

  SummaryEndpointApi:
    Description: API Gateway endpoint URL for the summary endpoint function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/summary"

  SummaryEndpointFunctionARN:
    Description: Summary endpoint lambda Function ARN
    Value: !GetAtt SummaryEndpointFunction.Arn

  SummaryEndpointFunctionIamRole:
    Description: Implicit IAM Role created for the summary endpoint function
    Value: !GetAtt SummaryEndpointFunctionRole.Arn

  SessionTableName:
    Description: The name of the DynamoDB table that holds all session data
    Value: !Ref SessionTable

  SummaryTableName:
    Description: The name of the DynamoDB table that holds all question summary data (totals, broken down by demographic)
    Value: !Ref SummaryTable

  IndividualWorkshopSummaryTableName:
    Description: The name of the DynamoDB table that holds all question summary data (totals, broken down by workshop)
    Value: !Ref IndividualWorkshopSummaryTable
