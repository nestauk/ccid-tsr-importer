AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tsr-importer-app

  Imports data from the TSR S3 bucket into our database, and generates demographic summary data

Globals:
  Function:
    Timeout: 60
  Api:
    Cors:
      AllowMethods: "'OPTIONS,GET'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"

Parameters:
  DataPlatformTableName:
    Type: String
    Description: The name of the DynamoDB table that holds all TSR data (1 record per session)
    Default: tsr-data-platform
  DataPlatformTableStreamArn:
    Type: String
    Description: A stream from the data platform table that triggers the summariser function
    Default: arn:aws:dynamodb:eu-west-2:251687087743:table/tsr-data-platform/stream/2023-06-19T14:34:04.519
  QuestionsTableName:
    Type: String
    Description: The name of the DynamoDB table that holds all question data
    Default: tsr-questions
  SummaryTableName:
    Type: String
    Description: The name of the DynamoDB table that holds all question summary data (totals, broken down by demographic)
    Default: tsr-summary

Resources:
  # SummariesApiGateway:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: prod
  #     GatewayResponses:
  #       DEFAULT_4XX:
  #         ResponseParameters:
  #           Headers:
  #             Access-Control-Allow-Headers: "'Content-Type,Authorization'"
  #             Access-Control-Allow-Origin: "'*'"
  #             Access-Control-Allow-Methods: "'OPTIONS,GET,PUT'"
  #             Access-Control-Allow-Credentials: "'true'"
  #       DEFAULT_5XX:
  #         ResponseParameters:
  #           Headers:
  #             Access-Control-Allow-Headers: "'Content-Type,Authorization'"
  #             Access-Control-Allow-Origin: "'https://localhost:5001'"
  #             Access-Control-Allow-Methods: "'OPTIONS,GET,PUT'"
  #             Access-Control-Allow-Credentials: "'true'"

  SummariserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tsr-summariser/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      MemorySize: 1024
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DataPlatformTableName
        - DynamoDBWritePolicy:
            TableName: !Ref SummaryTable
      Environment:
        Variables:
          TSR_QUESTIONS_TABLE_NAME: !Ref QuestionsTableName
          TSR_DATA_PLATFORM_TABLE_NAME: !Ref DataPlatformTableName
          TSR_SUMMARY_TABLE_NAME: !Ref SummaryTable
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !Ref DataPlatformTableStreamArn
            BatchSize: 100
            StartingPosition: TRIM_HORIZON
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  SummaryEndpointFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tsr-summary-endpoint/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
      Events:
        SummaryRequest:
          Type: Api
          Properties:
            Path: /summary
            Method: get
      Environment:
        Variables:
          TSR_QUESTIONS_TABLE_NAME: !Ref QuestionsTableName
          TSR_SUMMARY_TABLE_NAME: !Ref SummaryTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SummaryTable

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  ImporterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tsr-importer/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - arm64
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  SummaryTable:
    Type: AWS::Serverless::SimpleTable
    TableName: !Ref SummaryTableName
    PrimaryKey:
      Name: demographic # ignored? partition key seems to be 'id'
      Type: String

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"

Outputs:
  SummariserFunctionARN:
    Description: Summariser function ARN
    Value: !GetAtt SummariserFunction.Arn

  SummariserFunctionIamRole:
    Description: Implicit IAM Role created for summariser function
    Value: !GetAtt SummariserFunctionRole.Arn

  ImporterFunctionARN:
    Description: Importer function ARN
    Value: !GetAtt ImporterFunction.Arn

  ImporterFunctionIamRole:
    Description: Implicit IAM Role created for importer function
    Value: !GetAtt ImporterFunctionRole.Arn

  SummaryEndpointApi:
    Description: API Gateway endpoint URL for the summary endpoint function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/summary"

  SummaryEndpointFunctionARN:
    Description: Summary endpoint lambda Function ARN
    Value: !GetAtt SummaryEndpointFunction.Arn

  SummaryEndpointFunctionIamRole:
    Description: Implicit IAM Role created for the summary endpoint function
    Value: !GetAtt SummaryEndpointFunctionRole.Arn
